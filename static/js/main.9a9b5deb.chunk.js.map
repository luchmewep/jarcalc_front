{"version":3,"sources":["images/JAR.png","layouts/Header.tsx","components/about_problem/ProblemType.tsx","components/about_problem/AboutProblem.tsx","components/pages/Index.tsx","components/contexts/api.tsx","components/pages/Login.tsx","components/pages/Register.tsx","components/pages/About.tsx","components/pages/Forgot.tsx","layouts/Main.tsx","layouts/Bottom.tsx","App.tsx","index.tsx"],"names":["module","exports","Header","useState","isCollapsed","setIsCollapsed","activeNav","setActiveNav","toggleActiveNav","nav","color","dark","expand","fixed","scrolling","src","logo","height","alt","onClick","isOpen","navbar","left","active","className","to","icon","right","ProblemType","onChange","event","console","log","label","outline","selected","disabled","value","AboutProblem","action","border","tag","Index","axios","defaults","withCredentials","api","create","baseURL","process","Login","valid","error","email","setEmail","password","setPassword","handleChange","e","input","target","id","center","md","middle","onSubmit","preventDefault","login","get","then","res","post","catch","response","data","errors","noValidate","group","type","containerClass","Register","About","first_name","user","setUser","useEffect","fetchUser","Forgot","Main","path","exact","component","Bottom","style","position","width","zIndex","fluid","Date","getFullYear","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a9b5deb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JAR.e101c42e.png\";","import React, { useState } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBLink,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport logo from \"../images/JAR.png\"\r\n\r\nexport default function Header() {\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [activeNav, setActiveNav] = useState(\"home\");\r\n  const toggleActiveNav = (nav: string) => {\r\n    activeNav !== nav && setActiveNav(nav);\r\n  };\r\n\r\n  const toggleCollapse = () => {\r\n    setIsCollapsed(!isCollapsed);\r\n  };\r\n\r\n  return (\r\n    <MDBNavbar color=\"info-color\" dark expand=\"md\" fixed=\"top\" scrolling>\r\n      <MDBNavbarBrand>\r\n        <img src={logo} height=\"30\" alt=\"not found\" />\r\n      </MDBNavbarBrand>\r\n      <MDBNavbarToggler onClick={toggleCollapse} />\r\n      <MDBCollapse isOpen={isCollapsed} navbar>\r\n        <MDBNavbarNav left>\r\n          <MDBNavItem active={activeNav === \"home\"}>\r\n            <MDBLink\r\n              className=\"waves-effect waves-light\"\r\n              to=\"/\"\r\n              onClick={() => toggleActiveNav(\"home\")}\r\n            >\r\n              <MDBIcon icon=\"home\" className=\"mr-1\" />\r\n              Home\r\n            </MDBLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem active={activeNav === \"about\"}>\r\n            <MDBLink\r\n              className=\"waves-effect waves-light\"\r\n              to=\"about\"\r\n              onClick={() => toggleActiveNav(\"about\")}\r\n            >\r\n              <MDBIcon icon=\"info-circle\" className=\"mr-1\" />\r\n              About\r\n            </MDBLink>\r\n          </MDBNavItem>\r\n        </MDBNavbarNav>\r\n        <MDBNavbarNav right>\r\n          <MDBNavItem active={activeNav === \"login\"}>\r\n            <MDBLink\r\n              className=\"waves-effect waves-light\"\r\n              to=\"/login\"\r\n              onClick={() => toggleActiveNav(\"login\")}\r\n            >\r\n              <MDBIcon icon=\"sign-in\" className=\"mr-1\" />\r\n              Login\r\n            </MDBLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem active={activeNav === \"register\"}>\r\n            <MDBLink\r\n              className=\"waves-effect waves-light\"\r\n              to=\"/register\"\r\n              onClick={() => toggleActiveNav(\"register\")}\r\n            >\r\n              <MDBIcon icon=\"user-plus\" className=\"mr-1\" />\r\n              Register\r\n            </MDBLink>\r\n          </MDBNavItem>\r\n        </MDBNavbarNav>\r\n      </MDBCollapse>\r\n    </MDBNavbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MDBSelect, MDBSelectInput, MDBSelectOptions, MDBSelectOption } from \"mdbreact\";\r\n\r\nexport default function ProblemType() {\r\n  const onChange = (event:any) => {\r\n      console.log(\"im invoked...\")\r\n      console.log(event)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <MDBSelect onChange={()=> onChange} color=\"primary\" label=\"Example label\" outline>\r\n          <MDBSelectInput onChange={()=> onChange} className=\"text-center\" selected=\"Choose your option\" />\r\n          <MDBSelectOptions onChange={()=> onChange}>\r\n            <MDBSelectOption disabled>Choose your option</MDBSelectOption>\r\n            <MDBSelectOption value=\"1\" selected>Maximize</MDBSelectOption>\r\n            <MDBSelectOption value=\"2\">Minimize</MDBSelectOption>\r\n          </MDBSelectOptions>\r\n        </MDBSelect>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardHeader,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBInput,\r\n} from \"mdbreact\";\r\nimport ProblemType from \"./ProblemType\";\r\n\r\nexport default function AboutProblem() {\r\n  return (\r\n    <form action=\"\">\r\n      <MDBCard border=\"dark\" className=\"m-3\">\r\n      <MDBCardHeader>About the Problem</MDBCardHeader>\r\n      <MDBCardBody className=\"text-dark\">\r\n        <MDBCardTitle tag=\"h5\">Dark card title</MDBCardTitle>\r\n        <MDBCardText>\r\n          Some quick example text to build on the card title and make up the\r\n          bulk of the card's content.\r\n        </MDBCardText>\r\n        <MDBInput label=\"Title\" outline />\r\n        <ProblemType />\r\n        <MDBInput label=\"Example label\" outline />\r\n        <MDBInput label=\"Example label\" outline />\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AboutProblem from \"../about_problem/AboutProblem\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardHeader,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBRow,\r\n  MDBCol,\r\n} from \"mdbreact\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <MDBRow>\r\n      <MDBCol>\r\n        <div className=\"text-center\">\r\n          <h1>\r\n            <strong>JAR Calculator</strong>\r\n          </h1>\r\n        </div>\r\n        <AboutProblem />\r\n        <MDBCard border=\"dark\" className=\"m-3\">\r\n          <MDBCardHeader>Header</MDBCardHeader>\r\n          <MDBCardBody className=\"text-dark\">\r\n            <MDBCardTitle tag=\"h5\">Dark card title</MDBCardTitle>\r\n            <MDBCardText>\r\n              Some quick example text to build on the card title and make up the\r\n              bulk of the card's content.\r\n            </MDBCardText>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\nconst api = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_URL}`,\r\n});\r\n\r\nexport default api;","import React, { useState } from \"react\";\r\nimport {\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBCardTitle,\r\n} from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../contexts/api\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState({\r\n    value: \"\",\r\n    valid: true,\r\n    error: \"\",\r\n  });\r\n  const [password, setPassword] = useState({\r\n    value: \"\",\r\n    valid: true,\r\n    error: \"\",\r\n  });\r\n  const handleChange = (e: any) => {\r\n    let input = e.target as HTMLInputElement;\r\n    switch (input.id) {\r\n      case \"email\":\r\n        setEmail({ value: input.value, valid: true, error: \"\" });\r\n        break;\r\n      case \"password\":\r\n        setPassword({ value: input.value, valid: true, error: \"\" });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    let login = { email: email.value, password: password.value };\r\n    api\r\n      .get(\"/sanctum/csrf-cookie\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        api.defaults.withCredentials = true;\r\n        api\r\n          .post(\"/login\", login)\r\n          .then((res) => {\r\n            /**\r\n             * goes here if login succeeds...\r\n             */\r\n            console.log(\"LOGIN SUCCESSFUL\");\r\n            setEmail({ value: \"\", valid: true, error: \"\" });\r\n            setPassword({ value: \"\", valid: true, error: \"\" });\r\n          })\r\n          .catch((e) => {\r\n            let error = e.response.data.errors;\r\n            if (error) {\r\n              if (error.email) {\r\n                setEmail({ ...email, valid: false, error: error.email[0] });\r\n              }\r\n              if (error.password) {\r\n                setPassword({\r\n                  ...password,\r\n                  valid: false,\r\n                  error: error.password[0],\r\n                });\r\n              }\r\n            }\r\n            //Console\r\n            console.log(\"Login failed...\");\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((e) => {\r\n        //Console\r\n        console.log(\"CSRF failed...\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBRow center>\r\n      <MDBCol md=\"6\" middle>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n            <MDBCardTitle className=\"text-center\">\r\n              <h1>\r\n                <strong>Login</strong>\r\n              </h1>\r\n              <h5>API: {process.env.REACT_APP_API_URL}</h5>\r\n            </MDBCardTitle>\r\n\r\n            <form\r\n              className=\"needs-validation\"\r\n              onSubmit={handleSubmit}\r\n              noValidate\r\n            >\r\n              <MDBInput\r\n                icon=\"envelope\"\r\n                value={email.value}\r\n                label=\"Email\"\r\n                group\r\n                outline\r\n                type=\"email\"\r\n                id=\"email\"\r\n                onChange={handleChange}\r\n                className={email.error && \"is-invalid\"}\r\n              >\r\n                <div className=\"invalid-feedback ml-3 pl-3\">{email.error}</div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                icon=\"key\"\r\n                value={password.value}\r\n                label=\"Password\"\r\n                group\r\n                outline\r\n                type=\"password\"\r\n                containerClass=\"mb-0\"\r\n                id=\"password\"\r\n                onChange={handleChange}\r\n                error=\"dasdada\"\r\n              >\r\n                <div className=\"invalid-feedback ml-3 pl-3\">\r\n                  {password.error}\r\n                </div>\r\n              </MDBInput>\r\n              <p className=\"font-small grey-text d-flex justify-content-end\">\r\n                Forgot\r\n                <Link\r\n                  to=\"/forgot\"\r\n                  className=\"dark-grey-text font-weight-bold ml-1\"\r\n                >\r\n                  Password?\r\n                </Link>\r\n              </p>\r\n              <div className=\"text-center mb-4 mt-5\">\r\n                <MDBBtn\r\n                  color=\"danger\"\r\n                  type=\"submit\"\r\n                  className=\"btn-block z-depth-2\"\r\n                >\r\n                  Log in\r\n                </MDBBtn>\r\n              </div>\r\n            </form>\r\n            <p className=\"font-small grey-text d-flex justify-content-center\">\r\n              Don't have an account?\r\n              <Link\r\n                to=\"/register\"\r\n                className=\"dark-grey-text font-weight-bold ml-1\"\r\n              >\r\n                Sign up\r\n              </Link>\r\n            </p>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { MDBRow, MDBCol } from 'mdbreact'\r\n\r\nexport default function Register() {\r\n    return (\r\n        <MDBRow>\r\n            <MDBCol>\r\n                Register\r\n            </MDBCol>\r\n        </MDBRow>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\r\nimport api from \"../contexts/api\";\r\n\r\nexport default function About() {\r\n  const [user, setUser] = useState({first_name: \"\"});\r\n  useEffect(() => {\r\n    fetchUser()\r\n  });\r\n  const fetchUser = () => {\r\n    api.get(\"/api/user\")\r\n    .then(res => setUser(res.data));\r\n  }\r\n  \r\n  return (\r\n    <MDBRow>\r\n      <MDBCol>\r\n          <h1>ABOUT</h1>\r\n          <MDBBtn onClick={() => fetchUser}></MDBBtn>\r\n        <p>{user.first_name}</p>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Forgot() {\r\n    return (\r\n        <div>\r\n            Forgot Password\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Index from \"../components/pages/Index\";\r\nimport Login from \"../components/pages/Login\";\r\nimport Register from \"../components/pages/Register\";\r\nimport About from \"../components/pages/About\";\r\nimport Forgot from \"../components/pages/Forgot\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <main className=\"my-5 py-5\">\r\n      <MDBContainer className=\"scrollbar scrollbar-primary\">\r\n        <Route path=\"/\" exact component={Index} />\r\n        <Route path=\"/about\" exact component={About} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/forgot\" component={Forgot} />\r\n      </MDBContainer>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MDBFooter, MDBContainer } from \"mdbreact\";\r\n\r\nexport default function Bottom() {\r\n  return (\r\n    <MDBFooter\r\n      color=\"cyan\"\r\n      className=\"font-small darken-3 pt-0\"\r\n      style={{ position: \"fixed\", width: \"100%\", zIndex: \"2\" }}\r\n    >\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright:{\" \"}\r\n          <a href=\"https://www.MDBootstrap.com\"> MDBootstrap.com </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from './layouts/Header';\r\nimport Main from './layouts/Main';\r\nimport Bottom from './layouts/Bottom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Main />\r\n      <Bottom />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport '@luchmewep/fapro/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'mdbreact/dist/mdbreact';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}